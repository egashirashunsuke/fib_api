// Code generated by MockGen. DO NOT EDIT.
// Source: handler/fibo.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFiboCalculator is a mock of FiboCalculator interface.
type MockFiboCalculator struct {
	ctrl     *gomock.Controller
	recorder *MockFiboCalculatorMockRecorder
}

// MockFiboCalculatorMockRecorder is the mock recorder for MockFiboCalculator.
type MockFiboCalculatorMockRecorder struct {
	mock *MockFiboCalculator
}

// NewMockFiboCalculator creates a new mock instance.
func NewMockFiboCalculator(ctrl *gomock.Controller) *MockFiboCalculator {
	mock := &MockFiboCalculator{ctrl: ctrl}
	mock.recorder = &MockFiboCalculatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFiboCalculator) EXPECT() *MockFiboCalculatorMockRecorder {
	return m.recorder
}

// Fibocal mocks base method.
func (m *MockFiboCalculator) Fibocal(n int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Fibocal", n)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Fibocal indicates an expected call of Fibocal.
func (mr *MockFiboCalculatorMockRecorder) Fibocal(n interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fibocal", reflect.TypeOf((*MockFiboCalculator)(nil).Fibocal), n)
}
